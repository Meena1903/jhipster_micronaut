package org.jhipster.space.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SpaceEventAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceEventAllPropertiesEquals(SpaceEvent expected, SpaceEvent actual) {
        assertSpaceEventAutoGeneratedPropertiesEquals(expected, actual);
        assertSpaceEventAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceEventAllUpdatablePropertiesEquals(SpaceEvent expected, SpaceEvent actual) {
        assertSpaceEventUpdatableFieldsEquals(expected, actual);
        assertSpaceEventUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceEventAutoGeneratedPropertiesEquals(SpaceEvent expected, SpaceEvent actual) {
        assertThat(expected)
            .as("Verify SpaceEvent auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceEventUpdatableFieldsEquals(SpaceEvent expected, SpaceEvent actual) {
        assertThat(expected)
            .as("Verify SpaceEvent relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getPhoto()).as("check photo").isEqualTo(actual.getPhoto()))
            .satisfies(e -> assertThat(e.getPhotoContentType()).as("check photo contenty type").isEqualTo(actual.getPhotoContentType()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceEventUpdatableRelationshipsEquals(SpaceEvent expected, SpaceEvent actual) {
        assertThat(expected)
            .as("Verify SpaceEvent relationships")
            .satisfies(e -> assertThat(e.getMission()).as("check mission").isEqualTo(actual.getMission()));
    }
}
